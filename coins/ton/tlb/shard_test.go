/**
Authorï¼š https://github.com/xssnick/tonutils-go
*/

package tlb

import (
	"encoding/hex"
	"github.com/emresenyuva/go-wallet-sdk/coins/ton/tvm/cell"
	"testing"
)

func TestShardState_LoadFromCell(t *testing.T) {
	tag1 := 0x5f327da5
	//tag2 := 0x9023afe2

	tests := []struct {
		name            string
		tag             int
		leftAndRightRef bool
	}{
		{"blockType1 (tag 0x5f327da5)", tag1, true},
		//{"blockType2 (tag 0x9023afe2)", tag2, false},
	}

	type testStruct struct {
		State any `tlb:"[ShardStateUnsplit,ShardStateSplit]"`
	}

	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			var testShard testStruct
			var tBuilder cell.Builder
			err := tBuilder.StoreUInt(uint64(test.tag), 32)
			if err != nil {
				t.Fatal(err)
			}
			cellBytes, err := hex.DecodeString("")
			if err != nil {
				t.Fatal(err)
			}
			_cell, err := cell.FromBOC(cellBytes)
			if err != nil {
				t.Fatal(err)
			}

			err = tBuilder.StoreRef(_cell)
			if err != nil {
				t.Fatal(err)
			}
			if test.name == "blockType1 (tag 0x5f327da5)" {
				err = tBuilder.StoreRef(_cell)
				if err != nil {
					t.Fatal(err)
				}
			}

			err = LoadFromCell(&testShard, tBuilder.EndCell().BeginParse())
			if err != nil {
				t.Fatal(err)
			}

			if testShard.State.(ShardStateSplit).Left.Seqno != 24374596 {
				t.Fatal("incorrect result")
			}
		})
	}
}
